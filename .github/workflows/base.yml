name: build base
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'
  push:
    branches:
      - master
    paths:
      - base/**
      - scripts/base/ampstart.sh
permissions:
  contents: read
  packages: write

jobs:
  build_and_push:
    if: ${{ github.repository_owner == 'CubeCoders' && github.ref == 'refs/heads/master' }}
    name: 'amp:${{ matrix.base }}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - base: 'debian'
            allow_failure: false
          - base: 'debian-12'
            allow_failure: true
          - base: 'ubuntu'
            allow_failure: true
    continue-on-error: ${{ matrix.allow_failure }}

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./base/${{ matrix.base }}/Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: |
            cubecoders/ampbase:${{ matrix.base }}
          cache-from: type=gha,scope=${{ github.workflow }}-${{ matrix.base }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}-${{ matrix.base }}
          provenance: mode=max
          sbom: true

  update_description:
    if: ${{ github.repository_owner == 'CubeCoders' && github.ref == 'refs/heads/master' && always() }}
    needs: [build_and_push]
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: cubecoders/ampbase
          short-description: "Images for AMP's Docker instances."

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
